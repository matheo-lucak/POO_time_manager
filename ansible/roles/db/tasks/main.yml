- name: Deploy DB
  docker_container:
    name: '{{ db_host }}'
    image: postgres:11-alpine
    ports:
     - '{{ db_port }}:{{ db_port }}'
    volumes:
      - 'pgdata:/var/lib/postgresql/data'
    env:
      POSTGRES_USER: '{{ db_user }}'
      POSTGRES_PASSWORD: '{{ db_password }}'
      POSTGRES_DATABASE: '{{ db_name }}'
      POSTGRES_HOST: '{{ db_host }}'
      POSTGRES_PORT: '{{ db_port }}'
      POSTGRES_HOST_AUTH_METHOD: trust
      #  postgres
      #  postgres
      #  postgres
      #  "172.17.0.1"
      #  "5432"

# - name: Install dependencies for PostgreSQL
#   apt: name={{ item }} update_cache=true state=latest
#   with_items:
#     - bash
#     - openssl
#     - libssl-dev
#     - libssl-doc
#     - acl

# - name: Install PostgreSQL
#   apt: name={{ item }} update_cache=true state=present
#   with_items:
#     - postgresql
#     - postgresql-contrib
#     - libpq-dev
#     - python3-psycopg2

# - name: Ensure the PostgreSQL service is running
#   service: name=postgresql state=started enabled=yes

# - name: Create PostgreSQL database
#   become: true
#   become_user: postgres
#   postgresql_db:
#     name: '{{ db_name }}'
#     # login_host: 'localhost'
#     template: 'template0'
#     state: present

# - name: Ensure user has access to the new database
#   become: true
#   become_user: postgres
#   postgresql_user:
#     db: '{{ db_name }}'
#     name: '{{ db_user }}'
#     password: '{{ db_password }}'
#     priv: ALL
#     state: present

# - name: Ensure user does not have unnecessary permissions
#   become: true
#   become_user: postgres
#   postgresql_user:
#     name: '{{ db_user }}'
#     role_attr_flags: NOSUPERUSER,NOCREATEDB
#     state: present
